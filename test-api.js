const axios = require('axios');

const API_BASE_URL = 'http://localhost:5000';

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...\n');

  try {
    // 1. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—É—Å—Ç–æ)
    console.log('1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á:');
    const tasks = await axios.get(`${API_BASE_URL}/tasks`);
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', tasks.data);
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á:', tasks.data.length, '\n');

    // 2. –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É
    console.log('2. –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏:');
    const task1 = await axios.post(`${API_BASE_URL}/tasks`, {
      title: '–ò–∑—É—á–∏—Ç—å React',
      description: '–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã React –∏ Material-UI',
      status: 'in progress'
    });
    console.log('   –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞:', task1.data, '\n');

    // 3. –°–æ–∑–¥–∞—Ç—å –≤—Ç–æ—Ä—É—é –∑–∞–¥–∞—á—É
    console.log('3. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∑–∞–¥–∞—á–∏:');
    const task2 = await axios.post(`${API_BASE_URL}/tasks`, {
      title: '–°–æ–∑–¥–∞—Ç—å API',
      description: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å RESTful API –Ω–∞ Express.js',
      status: 'completed'
    });
    console.log('   –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞:', task2.data, '\n');

    // 4. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ (—Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2)
    console.log('4. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è:');
    const allTasks = await axios.get(`${API_BASE_URL}/tasks`);
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', allTasks.data);
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á:', allTasks.data.length, '\n');

    // 5. –ü–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –∑–∞–¥–∞—á—É –ø–æ ID
    console.log('5. –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø–æ ID:');
    const singleTask = await axios.get(`${API_BASE_URL}/tasks/${task1.data.id}`);
    console.log('   –ó–∞–¥–∞—á–∞:', singleTask.data, '\n');

    // 6. –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É
    console.log('6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏:');
    const updatedTask = await axios.put(`${API_BASE_URL}/tasks/${task1.data.id}`, {
      title: '–ò–∑—É—á–∏—Ç—å React (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)',
      description: '–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã React –∏ Material-UI - –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ',
      status: 'completed'
    });
    console.log('   –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞:', updatedTask.data, '\n');

    // 7. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    console.log('7. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    const finalTasks = await axios.get(`${API_BASE_URL}/tasks`);
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', finalTasks.data);
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á:', finalTasks.data.length, '\n');

    // 8. –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É
    console.log('8. –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏:');
    await axios.delete(`${API_BASE_URL}/tasks/${task2.data.id}`);
    console.log('   –ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞\n');

    // 9. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('9. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:');
    const finalCheck = await axios.get(`${API_BASE_URL}/tasks`);
    console.log('   –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–¥–∞—á–∏:', finalCheck.data);
    console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á:', finalCheck.data.length, '\n');

    console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    if (error.response) {
      console.error('   –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('   –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testAPI(); 